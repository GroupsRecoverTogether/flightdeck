# The default rules cause the adapter to crash with a lot of metrics
# https://github.com/kubernetes-sigs/prometheus-adapter/issues/292
default: false

# These metrics are for pod-aggregated metrics like requests per pod
custom:
- seriesQuery: '{__name__=~".*_requests_total$",pod!=""}'
  resources:
    overrides:
      namespace:
        resource: namespace
      pod:
        resource: pod
  name:
    matches: "^(.*)_total"
    as: "${1}_per_second"
  metricsQuery: (sum(irate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>))
- seriesQuery: '{__name__=~".*_jobs_total$",pod!=""}'
  resources:
    overrides:
      namespace:
        resource: namespace
      pod:
        resource: pod
  name:
    matches: "^(.*)_total"
    as: "${1}_per_second"
  metricsQuery: (sum(irate(<<.Series>>{<<.LabelMatchers>>}[1m])) by (<<.GroupBy>>))

# These metrics are for non-pod aggregated metrics like queue lengths
external:
- seriesQuery: '{__name__=~".*_queue_backlog_total$",namespace!=""}'
  resources:
    overrides:
      namespace:
        resource: namespace
  name:
    matches: "^(.*)_total"
    as: "${1}_total"
  metricsQuery: (max(<<.Series>>{<<.LabelMatchers>>}) by (namespace, queue))
- seriesQuery: '{__name__=~".*_queue_latency_seconds$",namespace!=""}'
  resources:
    overrides:
      namespace:
        resource: namespace
  name:
    matches: "^(.*)_seconds"
    as: "${1}_seconds"
  metricsQuery: (max(<<.Series>>{<<.LabelMatchers>>}) by (namespace, queue))

# This provides pod and node metrics for autoscaler and kubectl top
resource:
  cpu:
    containerQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>,id!='',container!=''}[5m])) by (<<.GroupBy>>)
    nodeQuery: sum(rate(container_cpu_usage_seconds_total{<<.LabelMatchers>>, id='/'}[5m])) by (<<.GroupBy>>)
    resources:
      overrides:
        node:
          resource: node
        namespace:
          resource: namespace
        pod:
          resource: pod
    containerLabel: container
  memory:
    containerQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id!='',container!=''}) by (<<.GroupBy>>)
    nodeQuery: sum(container_memory_working_set_bytes{<<.LabelMatchers>>,id='/'}) by (<<.GroupBy>>)
    resources:
      overrides:
        node:
          resource: node
        namespace:
          resource: namespace
        pod:
          resource: pod
    containerLabel: container
  window: 5m
